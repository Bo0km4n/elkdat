#!/bin/bash

if [ $# -lt 1 ] ; then
    echo "usage: $0 <build|install|boot|test|patchcheck|bisect>..." >&2
    exit 1
fi

CONFFILE=ktest.conf
SUBCOMMAND=$1
BOOT_VM_IF_NECESSARY=1
case $SUBCOMMAND in
    build|install)
	BOOT_VM_IF_NECESSARY=0
    ;;
    boot)
    ;;
    test)
	if [ $# -lt 2 ] ; then
	    echo "usage: $0 test <test path>" >&2
	    exit 1
	fi

	TEST=$2
	if [ ! -f ${TEST} -o ! -x ${TEST} ] ; then
	    echo "${TEST} should be executable test program" >&2
	    exit 1
	fi
	TEST=$(realpath ${TEST})
    ;;
    patchcheck)
	if [ $# -lt 4 ] ; then
	    echo "usage: $0 patchcheck <start> <end> [build|install|boot|test] [test path]" >&2
	    echo "	<start>: the first patch of the test target patchset" >&2
	    echo "	<end>: the last patch of the test target patchset" >&2
	    exit 1
	fi
	PATCHCHECK_START=$2
	PATCHCHECK_END=$3
	PATCHCHECK_TYPE=$4
	case $PATCHCHECK_TYPE in
	    build|install)
	    BOOT_VM_IF_NECESSARY=0
	    ;;
	    boot)
	    ;;
	    test)
		if [ $# -lt 5 ] ; then
		    echo "usage: $0 patchcheck <start> <end> test <test path>" >&2
		    exit 1
		fi
		TEST=$5
		if [ ! -f ${TEST} -o ! -x ${TEST} ] ; then
		    echo "${TEST} should be executable test program" >&2
		    exit 1
		fi
		TEST=$(realpath ${TEST})
		;;
	    *)
		echo "usage: $0 patchcheck <start> <end> [build|install|boot|test] [test path]" >&2
		echo "	<start>: the first patch of the test target patchset" >&2
		echo "	<end>: the last patch of the test target patchset" >&2
		exit 1		
		;;
	esac
	;;
    bisect)
	if [ $# -lt 4 ] ; then
	    echo "usage: $0 bisect <good> <bad> [build|install|boot|test] [test path]" >&2
	    echo "	<good>: the patch which passes test" >&2
	    echo "	<bad>: the patthc which fails test" >&2
	    exit 1
	fi
	BISECT_GOOD=$2
	BISECT_BAD=$3
	BISECT_TYPE=$4
	case $BISECT_TYPE in
	    build|install)
		BOOT_VM_IF_NECESSARY=0
	    ;;
	    boot)
	    ;;
	    test)
		if [ $# -lt 5 ] ; then
		    echo "usage: $0 bisect <good> <bad> test <test path>" >&2
		    exit 1
		fi
		TEST=$5
		if [ ! -f ${TEST} -o ! -x ${TEST} ] ; then
		    echo "${TEST} should be executable test program" >&2
		    exit 1
		fi
		TEST=$(realpath ${TEST})
		;;
	    *)
		echo "usage: $0 bisect <good> <bad> [build|install|boot|test] [test path]" >&2
		echo "	<good>: the patch which passes test" >&2
		echo "	<bad>: the patthc which fails test" >&2
		exit 1
		;;
	esac
	;;
    *)
	echo "subcommand shoulld be <build|install|boot|test|patchcheck|bisect>: ${SUBCOMMAND}" >&2
	exit 1
    ;;
esac

trap "_cleanup ; exit 0" 0 1 2 3 15

function _cleanup {
    restore_ktest_conf
}

function modify_ktest_conf {
    sed -i -e '/^TEST_START/,$s/^/# /' $CONFFILE
    sed -i -e '$aTEST_START' $CONFFILE

    sed -i -e "\$aTEST_TYPE = ${SUBCOMMAND}" $CONFFILE
    case $SUBCOMMAND in
	test)
	    sed -i -e "\$aTEST = ${TEST}" $CONFFILE
	    ;;
	patchcheck)
	    sed -i -e "\$aPATCHCHECK_START = ${PATCHCHECK_START}" $CONFFILE
	    sed -i -e "\$aPATCHCHECK_END = ${PATCHCHECK_END}" $CONFFILE
	    sed -i -e "\$aPATCHCHECK_TYPE = ${PATCHCHECK_TYPE}" $CONFFILE
	    if [ $PATCHCHECK_TYPE = test ] ; then
		sed -i -e "\$aTEST = ${TEST}" $CONFFILE
	    fi
	    ;;
	bisect)
	    sed -i -e "\$aBISECT_GOOD = ${BISECT_GOOD}" $CONFFILE
	    sed -i -e "\$aBISECT_BAD = ${BISECT_BAD}" $CONFFILE
	    sed -i -e "\$aBISECT_TYPE = ${BISECT_TYPE}" $CONFFILE
	    if [ $BISECT_TYPE = test ] ; then
		sed -i -e "\$aTEST = ${TEST}" $CONFFILE
	    fi
	    ;;	    
    esac
}

function restore_ktest_conf {
    pushd ktest
    sed -i -e '/^TEST_START/,$d' $CONFFILE
    sed -i -e '/^# TEST_START/,$s/^# //' $CONFFILE
    popd
}

pushd ktest
modify_ktest_conf
popd

if [ $BOOT_VM_IF_NECESSARY -eq 1 ] ; then
    IS_VM_DOWN=0
    pushd elkdat
    vagrant status | grep ktest | grep -q shutoff && IS_VM_DOWN=1
    if [ $IS_VM_DOWN -eq 1 ] ; then
	vagrant up
    fi
    popd
fi

pushd ktest
./ktest.pl
popd
